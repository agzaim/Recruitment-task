* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

.clearfix {
  clear: both;
}

@font-face {
  font-family: 'lunchtype22regular';
  src: url("../fonts/lunchtype22-regular.woff2") format("woff2"), url("../fonts/lunchtype22-regular.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'lunchtype22medium';
  src: url("../fonts/lunchtype22-medium.woff2") format("woff2"), url("../fonts/lunchtype22-medium.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'lunchtype24expanded_medium';
  src: url("../fonts/lunchtype24-medium-expanded.woff2") format("woff2"), url("../fonts/lunchtype24-medium-expanded.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'alegreyaitalic';
  src: url("../fonts/alegreya-italic.woff2") format("woff2"), url("../fonts/alegreya-italic.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

.page-container {
  width: 95%;
  margin: 0 auto;
  background-color: #fbfbfb;
  -webkit-box-shadow: 7px 0 5px -4px #edd1a0;
  box-shadow: 7px 0 5px -4px #edd1a0;
  border-bottom: 1px solid #fbfbfb;
}

@media screen and (max-width: 915px) {
  .page-container {
    width: 100%;
  }
}

.container {
  width: 900px;
  margin: 0 auto;
  background-color: #fff;
  -webkit-box-shadow: 9px 0 5px -6px #eeeeee;
  box-shadow: 9px 0 5px -6px #eeeeee;
  border-left: 1px solid #eeeeee;
  border-right: 1px solid #eeeeee;
}

@media screen and (max-width: 915px) {
  .container {
    width: 100%;
  }
}

.modal-container {
  width: 70%;
  margin: 0 auto;
  background-color: #fff;
}

@media screen and (max-width: 915px) {
  .modal-container {
    width: 90%;
  }
}

header {
  background-color: #fff;
  width: 100%;
  z-index: 1;
  padding: 30px 3% 19px 3%;
}

@media screen and (max-width: 650px) {
  header {
    padding-top: 10px;
  }
}

header .container {
  border: 0;
  -webkit-box-shadow: 0 0 0 0;
  box-shadow: 0 0 0 0;
}

@media screen and (max-width: 1120px) {
  header .container {
    width: 90%;
    display: inline-block;
  }
}

@media screen and (max-width: 650px) {
  header .container {
    padding-bottom: 0;
  }
}

header h3 {
  display: inline-block;
  font-size: 29px;
  font-family: lunchtype22medium, sans-serif;
}

.left-arrow {
  position: absolute;
  width: 40px;
  height: 40px;
  left: 4%;
  color: #a7a9ac;
  border: 1px solid #a7a9ac;
  text-align: center;
  font-size: 36px;
  line-height: 40px;
  font-family: Courier, sans-serif;
  border-radius: 50%;
}

.left-arrow:hover {
  cursor: pointer;
  background-color: #a7a9ac;
  color: #fff;
}

@media screen and (max-width: 1120px) {
  .left-arrow {
    position: static;
    display: inline-block;
    vertical-align: top;
  }
}

@media screen and (max-width: 650px) {
  .left-arrow {
    height: 28px;
    width: 28px;
    font-size: 25px;
    line-height: 28px;
    margin-top: 4px;
  }
}

.header-title-box {
  display: inline-block;
  width: 48%;
}

@media screen and (max-width: 1120px) {
  .header-title-box {
    padding-left: 20px;
  }
}

@media screen and (max-width: 1120px) and (max-width: 650px) {
  .header-title-box {
    width: 100%;
  }
}

.plus-mark {
  display: inline-block;
  height: 26px;
  width: 26px;
  border-radius: 50%;
  background-color: #0266b3;
  color: #fff;
  font-size: 26px;
  text-align: center;
  line-height: 27px;
  font-family: "Palatino", serif;
  margin-left: 28px;
  font-weight: 100;
}

.header-view-buttons {
  display: inline-block;
  color: #2d2c2e;
  font-weight: bold;
}

@media screen and (max-width: 1120px) {
  .header-view-buttons {
    float: right;
    margin-top: 10px;
  }
}

@media screen and (max-width: 650px) {
  .header-view-buttons {
    display: block;
    float: none;
    margin-top: 12px;
  }
}

input[type="radio"] {
  margin-left: 26px;
  margin-right: 5px;
}

@media screen and (max-width: 650px) {
  input[type="radio"] {
    margin-left: 23px;
  }
}

.header-sorting-box {
  display: inline-block;
  float: right;
  margin-top: 13px;
  font-family: alegreyaitalic, serif;
  font-weight: bold;
  color: #40515b;
}

@media screen and (max-width: 1120px) {
  .header-sorting-box {
    display: block;
    float: none;
    margin-top: 12px;
    padding-left: 20px;
  }
}

@media screen and (max-width: 650px) {
  .header-sorting-box {
    display: none;
  }
}

.sorting-choice {
  font-family: "lunchtype22regular", sans-serif;
  margin-left: 7px;
  color: #0266b3;
  font-weight: bold;
}

.sorting-choice:first-child {
  margin-right: 7px;
}

.sorting-choice:hover {
  cursor: pointer;
  opacity: 0.5;
}

.active {
  color: #a7a9ac;
  text-decoration: underline;
}

.active:hover {
  opacity: 1;
  cursor: auto;
}

.search-input {
  width: 76%;
  height: 34px;
  margin-top: 20px;
  padding-left: 14px;
  border: 1px solid #eeeeee;
  background-color: #fbfbfb;
  float: left;
}

@media screen and (max-width: 650px) {
  .search-input {
    width: 100%;
    margin-top: 10px;
  }
}

.search-btn {
  height: 34px;
  margin-top: 20px;
  width: 22%;
  border: 1px solid #7d8ba1;
  color: #a7a9ac;
  font-size: 16px;
  font-weight: bold;
  background-color: #fff;
  float: right;
}

.search-btn:hover:hover {
  cursor: pointer;
  color: #fff;
  background-color: #0266b3;
}

@media screen and (max-width: 650px) {
  .search-btn {
    width: 100%;
    margin-top: 10px;
  }
}

.test-box {
  width: 100%;
  border: 2px solid red;
  position: relative;
}

.test-box div {
  width: 50%;
  border: 1px solid green;
  height: 60px;
}

.test-box p {
  position: absolute;
  top: 10px;
  right: 50px;
}

@media screen and (max-width: 915px) {
  .test-box p {
    right: 20px;
    top: 11px;
  }
}

@media screen and (max-width: 650px) {
  .test-box p {
    left: 40px;
    bottom: 10px;
  }
}

.question-box {
  border-top: 1px solid #eeeeee;
  border-bottom: 1px solid #eeeeee;
  padding-bottom: 40px;
}

.question-box-header {
  padding: 20px;
  padding-bottom: 24px;
  width: 76%;
  background-color: #dff3fd;
}

@media screen and (max-width: 800px) {
  .question-box-header {
    width: 100%;
  }
}

.question-box-header .user-photo {
  display: inline-block;
  margin-right: 35px;
  margin-left: 5px;
  vertical-align: top;
}

@media screen and (max-width: 650px) {
  .question-box-header .user-photo {
    margin-right: 10px;
  }
}

.question-box-header p {
  color: #7d8ba1;
  font-size: 11px;
}

.question-box-header h4 {
  font-size: 19px;
  margin-top: 2px;
}

.question-box-header .user-name {
  padding-right: 6px;
}

.question-box-header-content {
  display: inline-block;
}

.question-box-header-content a, .question-box-header-content a:visited {
  text-decoration: none;
  color: #0266b3;
}

.user-photo {
  height: 53px;
  width: 53px;
  border-radius: 50%;
  margin: 0 auto;
  display: block;
}

.user-photo:hover {
  cursor: pointer;
  opacity: 0.5;
}

.user-name {
  font-size: 16px;
  text-align: center;
  color: #0266b3;
  font-family: lunchtype24expanded_medium, sans-serif;
}

.user-name:hover {
  cursor: pointer;
  opacity: 0.5;
}

h4 {
  font-family: alegreyaitalic, serif;
  font-weight: 800;
  color: #0266b3;
  letter-spacing: 1px;
}

h4:hover {
  cursor: pointer;
  opacity: 0.5;
}

.question-box-content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.question-box-content p {
  text-align: center;
  color: #40515b;
  font-weight: 800;
  font-family: alegreyaitalic, serif;
  letter-spacing: 1px;
  font-size: 14px;
}

.question-box-content p span {
  font-family: lunchtype22medium, sans-serif, sans-serif;
  font-size: 16px;
  font-weight: 100;
  padding-right: 2px;
}

.user-activities-container {
  width: 76%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

@media screen and (max-width: 800px) {
  .user-activities-container {
    width: 70%;
  }
}

@media screen and (max-width: 650px) {
  .user-activities-container {
    width: 60%;
  }
}

.question-box-element {
  background-color: #eeeeee;
  padding-top: 25px;
  margin-top: 30px;
  margin-right: 13px;
  width: 15%;
  position: relative;
}

.question-box-element:first-child {
  margin-top: 0;
  background-color: #dff3fd;
  padding-top: 108px;
}

.question-box-element:nth-child(2) {
  background-color: #fff;
}

.question-box-element:last-child {
  margin-right: 0;
}

.question-box-element:last-child .user-activity-desription {
  border-top: 1px solid #000;
}

.question-box-element:last-child .question-box-element-dot {
  background-color: #000;
}

@media screen and (max-width: 800px) {
  .question-box-element {
    margin-right: 20px;
    width: 20%;
  }
  .question-box-element:nth-last-child(2) {
    display: none;
  }
  .question-box-element:nth-last-child(3) {
    display: none;
  }
  .question-box-element:nth-child(2) {
    display: block;
  }
}

@media screen and (max-width: 650px) {
  .question-box-element {
    margin-right: 10px;
    width: 36%;
    margin-top: 0;
  }
  .question-box-element:nth-last-child(4) {
    display: none;
  }
  .question-box-element:first-child {
    display: none;
  }
  .question-box-element:nth-child(2) {
    display: block;
    background-color: #eeeeee;
  }
}

.question-box-element p {
  line-height: 16px;
}

.question-box-element span {
  display: block;
  text-align: center;
  color: #40515b;
  font-family: lunchtype22medium, sans-serif, sans-serif;
  font-size: 18px;
  margin-top: 17px;
  margin-bottom: 60px;
}

.user-activity-desription {
  border-top: 1px solid #a7a9ac;
  font-size: 12px;
  text-align: center;
  margin: 60px 8px 0 8px;
  padding: 6px;
  font-family: lunchtype22medium, sans-serif;
  color: #7d8ba1;
  text-transform: uppercase;
}

.question-box-element-dot {
  background-color: #a7a9ac;
  border-radius: 50%;
  height: 10px;
  width: 10px;
  position: absolute;
  left: 45%;
  bottom: -5px;
}

.question-box-summary {
  margin-top: 30px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-flow: column;
  flex-flow: column;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: flex-start;
  padding-left: 60px;
}

@media screen and (max-width: 915px) {
  .question-box-summary {
    padding-left: 50px;
  }
}

@media screen and (max-width: 650px) {
  .question-box-summary {
    padding-left: 30px;
  }
}

.pagination-btn-container {
  margin-top: 30px;
  padding-left: 20px;
  padding-bottom: 30px;
}

.pagination-btn {
  text-decoration: none;
  color: #e1173f;
  font-size: 18px;
  font-weight: 800;
}

.pagination-btn:hover {
  cursor: pointer;
  opacity: 0.5;
}

.discussion-timer {
  text-align: center;
  color: #40515b;
  font-weight: 800;
  font-family: alegreyaitalic, serif;
  letter-spacing: 1px;
  font-size: 14px;
  padding-top: 5px;
  float: right;
  display: inline-block;
  margin-top: 9px;
}

.discussion-timer span {
  font-family: lunchtype22medium, sans-serif, sans-serif;
  font-size: 16px;
  font-weight: 100;
  padding-right: 2px;
}

.discussion-timer span {
  padding: 0 9px;
}

@media screen and (max-width: 650px) {
  .discussion-timer {
    display: none;
  }
}

.sng-header-container {
  padding-bottom: 18px;
}

@media screen and (max-width: 1120px) {
  .sng-header-container {
    width: 90%;
    display: inline-block;
    float: right;
  }
}

.sng-header-container .plus-mark {
  margin-left: 38px;
}

@media screen and (max-width: 650px) {
  .sng-header-container .plus-mark {
    float: right;
    margin-top: 6px;
  }
}

.single-title-box {
  display: inline-block;
  width: 50%;
}

@media screen and (max-width: 650px) {
  .single-title-box {
    width: 100%;
  }
}

.single-question-box {
  position: relative;
  padding-bottom: 0;
  margin-bottom: 55px;
  border-top: 0;
}

.single-question-box .question-box-header {
  width: 100%;
}

@media screen and (max-width: 650px) {
  .single-question-box .question-box-header {
    -webkit-box-shadow: 0 8px 7px -7px #a7a9ac inset;
    box-shadow: 0 8px 7px -7px #a7a9ac inset;
  }
}

@media screen and (max-width: 650px) {
  .single-question-box .question-box-header {
    padding: 0;
  }
}

.single-question-box .question-box-header p {
  padding-left: 95px;
}

@media screen and (max-width: 650px) {
  .single-question-box .question-box-header p {
    padding: 35px 0 26px 85px;
  }
}

.single-question-box .user-photo {
  position: absolute;
  left: 2%;
  top: 20px;
}

.single-question-box h4 {
  padding-left: 95px;
}

.single-question-box h4:hover {
  cursor: auto;
  opacity: 1;
}

@media screen and (max-width: 650px) {
  .single-question-box h4 {
    padding: 10px;
    padding-left: 20px;
    border-top: 1px solid white;
  }
}

.unfollow-btn {
  position: absolute;
  padding-top: 35px;
  right: 70px;
  font-weight: bold;
  color: #0266b3;
}

.unfollow-btn:hover {
  cursor: pointer;
  opacity: 0.5;
}

@media screen and (max-width: 915px) and (min-width: 651px) {
  .unfollow-btn {
    right: 40px;
  }
}

@media screen and (max-width: 650px) {
  .unfollow-btn {
    bottom: 39px;
    left: 15px;
  }
}

.question-background {
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

@media screen and (max-width: 650px) {
  .question-background {
    display: block;
  }
}

.blue-block {
  width: 11%;
  background-color: #dff3fd;
}

@media screen and (max-width: 650px) {
  .blue-block {
    display: none;
  }
}

.longer-text {
  padding: 24px 0px 37px 22px;
  width: 66%;
  font-size: 13px;
  line-height: 18px;
  font-weight: 800;
  color: #586d7f;
}

@media screen and (max-width: 650px) {
  .longer-text {
    width: 100%;
    padding: 10px;
    font-size: 14px;
  }
}

.votes-box {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  padding-top: 20px;
  margin: 0 auto;
}

@media screen and (max-width: 650px) {
  .votes-box {
    -webkit-box-pack: end;
    -ms-flex-pack: end;
    justify-content: flex-end;
    padding: 10px 15px 32px 0;
  }
}

.votes-box p {
  text-align: center;
  color: #40515b;
  font-weight: 800;
  font-family: alegreyaitalic, serif;
  letter-spacing: 1px;
  font-size: 14px;
  padding-top: 5px;
}

.votes-box p span {
  font-family: lunchtype22medium, sans-serif, sans-serif;
  font-size: 16px;
  font-weight: 100;
  padding-right: 2px;
}

.voting-arrow {
  width: 0;
  height: 0;
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  margin-left: 28px;
}

.voting-arrow:hover {
  cursor: pointer;
  opacity: 0.5;
}

.arrow-up {
  border-bottom: 10px solid #0266b3;
  margin-bottom: 12px;
}

.arrow-down {
  border-top: 10px solid #0266b3;
}

.btn-container {
  position: absolute;
  bottom: -16px;
  width: 100%;
}

.respond-btn {
  margin: 0 auto;
  border: 2px solid #eeeeee;
  font-weight: bold;
  padding: 7px 0;
  text-align: center;
  width: 186px;
  background-color: #fff;
  color: #2d2c2e;
}

.respond-btn:hover:hover {
  cursor: pointer;
  color: #fff;
  background-color: #0266b3;
}

.answer-introduction {
  text-align: center;
  color: #40515b;
  font-weight: 800;
  font-family: alegreyaitalic, serif;
  letter-spacing: 1px;
  font-size: 14px;
  color: #2d2c2e;
}

.answer-introduction span {
  font-family: lunchtype22medium, sans-serif, sans-serif;
  font-size: 16px;
  font-weight: 100;
  padding-right: 2px;
}

.answer-introduction .question-author {
  font-weight: 800;
  font-family: alegreyaitalic, serif;
  letter-spacing: 1px;
  font-size: 14px;
}

.answer-section {
  margin-top: 40px;
  position: relative;
  border: 0;
}

.answer-section:last-child {
  margin-bottom: 70px;
}

.answer-container {
  -webkit-box-shadow: 9px -9px 5px -6px #eeeeee;
  box-shadow: 9px -9px 5px -6px #eeeeee;
  border: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  border-top: 1px solid #eeeeee;
}

@media screen and (max-width: 650px) {
  .answer-container {
    -webkit-box-shadow: 0 -9px 7px -7px #a7a9ac;
    box-shadow: 0 -9px 7px -7px #a7a9ac;
    display: block;
    border-bottom: 1px solid #eeeeee;
  }
}

.answer-container .votes-box {
  padding-top: 48px;
}

@media screen and (max-width: 650px) {
  .answer-container .votes-box {
    padding-top: 10px;
  }
}

.answer-introduction + .answer-section {
  margin-top: 17px;
}

.answer-photo-box {
  width: 11%;
  padding-top: 20px;
  position: absolute;
}

@media screen and (max-width: 650px) {
  .answer-photo-box {
    padding-top: 10px;
  }
}

.answer-box {
  margin-left: 11%;
  padding-top: 20px;
  padding-left: 22px;
  width: 66%;
  border-left: 1px solid #eeeeee;
}

@media screen and (max-width: 650px) {
  .answer-box {
    width: 100%;
    border-left: 0;
    margin-left: 0;
    padding-left: 0;
  }
}

.answer-box .longer-text {
  padding: 0 0 37px 0;
  width: auto;
}

@media screen and (max-width: 650px) {
  .answer-box .longer-text {
    border-top: 2px solid #eeeeee;
    padding: 10px;
    margin-top: 10px;
    margin-bottom: 10px;
  }
}

.answer-box p {
  color: #7d8ba1;
  font-size: 12px;
  padding-bottom: 15px;
}

@media screen and (max-width: 650px) {
  .answer-box p {
    margin-left: 13%;
    padding-top: 5px;
  }
}

.answer-box .user-name {
  padding-right: 6px;
}

.middle-dot {
  font-weight: bold;
  padding-left: 7px;
}

.answer-time {
  text-align: center;
  color: #40515b;
  font-weight: 800;
  font-family: alegreyaitalic, serif;
  letter-spacing: 1px;
  font-size: 14px;
  padding-left: 7px;
}

.answer-time span {
  font-family: lunchtype22medium, sans-serif, sans-serif;
  font-size: 16px;
  font-weight: 100;
  padding-right: 2px;
}

.empty-box {
  background-color: #fbfbfb;
  width: 11%;
  border: 0;
}

.comment-container {
  margin-top: 0;
  -webkit-box-shadow: 9px 0 5px -6px #eeeeee;
  box-shadow: 9px 0 5px -6px #eeeeee;
  border-top: 1px solid #eeeeee;
}

@media screen and (max-width: 650px) {
  .comment-container {
    border-left: 8px solid #a7a9ac;
  }
}

.comment-container .answer-photo-box {
  left: 11%;
}

@media screen and (max-width: 650px) {
  .comment-container .answer-photo-box {
    left: 1%;
  }
}

.comment-container .answer-box {
  width: 55%;
}

@media screen and (max-width: 650px) {
  .comment-container .answer-box {
    width: 100%;
  }
}

.modal-background {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 10;
  overflow-y: auto;
  overflow-x: hidden;
  width: 100%;
  height: 100%;
  background-color: black;
  background-color: rgba(0, 0, 0, 0.7);
  padding-top: 20px;
}

@media screen and (max-width: 650px) {
  .modal-background {
    padding: 0;
  }
}

.modal {
  background-color: #fff;
  margin: 0 auto;
  width: 880px;
  padding-bottom: 25px;
  margin-bottom: 50px;
}

@media screen and (max-width: 915px) {
  .modal {
    width: 100%;
    padding-bottom: 0;
    margin-bottom: 0;
  }
}

.modal p {
  font-size: 13px;
  font-family: lunchtype24expanded_medium, sans-serif;
  color: #7d8ba1;
  text-transform: uppercase;
  margin: 17px 0;
  margin-top: 40px;
  text-align: center;
  letter-spacing: 1.2px;
}

@media screen and (max-width: 650px) {
  .modal p {
    padding: 0 50px;
  }
}

.modal h2 {
  font-family: alegreyaitalic, serif;
  font-size: 42px;
  font-weight: 500;
  color: #2d2c2e;
  letter-spacing: 1.5px;
}

.close-mark {
  color: #7d8ba1;
  float: right;
  font-size: 24px;
  padding-right: 15px;
  padding-top: 8px;
}

.close-mark:hover,
.close-mark:focus {
  color: #000;
  cursor: pointer;
}

.modal-header {
  border-bottom: 1px solid #a7a9ac;
  padding: 15px 0;
  padding-bottom: 25px;
}

@media screen and (max-width: 650px) {
  .modal-header {
    padding-top: 0;
  }
}

.user-profile-photo {
  height: 85px;
  width: 85px;
  border-radius: 50%;
  display: block;
  margin: 0 auto;
}

.user-profile-name {
  padding: 14px 0;
  color: #0266b3;
  text-align: center;
  font-family: lunchtype24expanded_medium, sans-serif;
  font-size: 20px;
}

.user-data-box {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

@media screen and (max-width: 650px) {
  .user-data-box {
    display: block;
  }
}

.user-data {
  font-size: 13px;
  color: #7d8ba1;
  font-family: lunchtype24expanded_medium, sans-serif;
  text-align: center;
  font-family: lunchtype24expanded_medium, sans-serif;
}

.user-data:last-child {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

@media screen and (max-width: 650px) {
  .user-data:last-child {
    display: block;
  }
}

.user-data span {
  color: #2d2c2e;
}

@media screen and (max-width: 650px) {
  .user-data span {
    display: block;
    margin-bottom: 15px;
  }
}

.ribbon-container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-left: 4px;
  width: 63px;
}

@media screen and (max-width: 650px) {
  .ribbon-container {
    margin: 0 auto;
    padding-top: 3px;
  }
}

.ribbon {
  height: 22px;
  width: 16px;
}

.modal-navigation-container {
  padding-top: 17px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.modal-arrow {
  height: 30px;
  width: 30px;
  border-radius: 50%;
  font-family: "Courier", serif;
  color: #fff;
  font-size: 27px;
  line-height: 30px;
  background-color: #a7a9ac;
}

.arr-left {
  padding-left: 5px;
}

.arr-right {
  padding-left: 8px;
}

.activeArrow {
  background-color: #0266b3;
}

.activeArrow:hover {
  cursor: pointer;
  opacity: 0.5;
}

.statistics-squares-container {
  width: 72%;
  margin: 42px auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
  justify-content: space-around;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

@media screen and (max-width: 650px) {
  .statistics-squares-container {
    width: 220px;
  }
}

.statistics-square {
  height: 90px;
  width: 90px;
  background-color: #dff3fd;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  color: #2d2c2e;
}

.statistics-square:first-child, .statistics-square:nth-child(3) {
  -webkit-transform: rotate(-40deg);
  transform: rotate(-40deg);
}

.statistics-square:first-child .statistics-square-content, .statistics-square:nth-child(3) .statistics-square-content {
  -webkit-transform: rotate(40deg);
  transform: rotate(40deg);
}

.statistics-square:nth-child(2) {
  -webkit-transform: rotate(-10deg);
  transform: rotate(-10deg);
}

.statistics-square:nth-child(2) .statistics-square-content {
  -webkit-transform: rotate(10deg);
  transform: rotate(10deg);
}

.statistics-square:last-child {
  -webkit-transform: rotate(10deg);
  transform: rotate(10deg);
}

.statistics-square:last-child .statistics-square-content {
  -webkit-transform: rotate(-10deg);
  transform: rotate(-10deg);
}

.statistics-square-content {
  text-align: center;
  font-size: 14px;
  font-weight: 800;
  margin: 0 auto;
  font-family: alegreyaitalic, serif;
  letter-spacing: 1.5px;
}

.statistics-square-content span {
  font-family: lunchtype22medium, sans-serif, sans-serif;
  display: block;
  font-size: 20px;
  font-weight: bold;
  padding-bottom: 4px;
  letter-spacing: 1px;
}

.modal-user-container {
  width: 48%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin: 0 auto;
  margin-bottom: 20px;
}

@media screen and (max-width: 650px) {
  .modal-user-container {
    width: 80%;
  }
}

.user-photo-frame {
  height: 90px;
  width: 90px;
  background-image: url(../items/skelatal_weave.png);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin-bottom: 5px;
}

.modal-footer {
  width: 100%;
  background-image: url(../items/skelatal_weave.png);
  margin-top: 40px;
  position: relative;
  padding-top: 3px;
  padding-bottom: 25px;
}

@media screen and (max-width: 650px) {
  .modal-footer {
    padding-bottom: 55px;
  }
}

.modal-footer .user-photo {
  position: absolute;
  left: 47%;
  top: -26px;
}

.modal-footer p {
  font-size: 11px;
  margin-bottom: 2px;
}

.modal-footer p span {
  padding-right: 6px;
  text-transform: none;
  font-weight: 100;
}

.modal-footer h4 {
  font-size: 20px;
  letter-spacing: 1.5px;
  text-align: center;
  margin-bottom: 25px;
}

.modal-footer h4:hover {
  cursor: auto;
  opacity: 1;
}

.footer-statistics-container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
  justify-content: space-around;
  width: 67%;
  margin: 0 auto;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

@media screen and (max-width: 915px) and (min-width: 651px) {
  .footer-statistics-container {
    width: 80%;
  }
}

@media screen and (max-width: 650px) {
  .footer-statistics-container {
    height: 55px;
    -webkit-box-orient: vertical;
    -webkit-box-direction: reverse;
    -ms-flex-direction: column-reverse;
    flex-direction: column-reverse;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-box-align: start;
    -ms-flex-align: start;
    align-items: flex-start;
    -ms-flex-line-pack: justify;
    align-content: space-between;
  }
}

.footer-statistics-box {
  text-align: center;
  color: #40515b;
  font-weight: 800;
  font-family: alegreyaitalic, serif;
  letter-spacing: 1px;
  font-size: 14px;
}

.footer-statistics-box span {
  font-family: lunchtype22medium, sans-serif, sans-serif;
  font-size: 16px;
  font-weight: 100;
  padding-right: 2px;
}

.footer-statistics-box span {
  padding-right: 6px;
  font-weight: bold;
}

@media screen and (max-width: 650px) {
  .footer-statistics-box:nth-child(3) {
    -webkit-box-ordinal-group: 4;
    -ms-flex-order: 3;
    order: 3;
  }
}

body {
  font-family: "lunchtype22regular", sans-serif;
  background-color: #ffe1ad;
}

.hideScroll {
  overflow-y: hidden;
}
/*# sourceMappingURL=data:application/json;base64, */